# fastlisp.cfg

######################################################
##                                                  ##
##              Configuration Profile               ##
##                                                  ##
##       Global FastLisp Function Definitions       ##
##                                                  ##
######################################################


# Format is: <(DEFUN ...)>{ <(DEFUN ...)>}  # <EOF>

(defun format_list_4print
  (progn
    (alsetq list $1)
    (setq howmany_in_list (ival (index list 0)))
    (setq form_string "")
    (for i 1 1 howmany_in_list (progn
      (setq member (index list i))
      (if (> (indices member) 1)
        (setq form_string (cat form_string (format_list_4print member)))
        (if (== (type member) "S")
          (progn
            (setq form_string (cat form_string "\""))
            (setq form_string (cat form_string (str_unraw member)))
            (setq form_string (cat form_string "\""))
          )
          (setq form_string (cat form_string member))
        )
      )
      (setq form_string (cat form_string " "))
    ))
    (setq form_string (leftr form_string 1))
    (cat (cat "(" form_string) ")")
  )
)
(defun fastlisp
  (progn
    (alsetq ran (mapcar $1))
    (setq output (index ran 0))
    (if (index ran 2)
      (cat output (cat (str_fmt "[Syntax error %ld]: " (index ran 2)) (index
        ran 3)))
      (if (index ran 4)
        (cat output (cat (str_fmt "[Run-time error %ld]: " (index ran 4))
          (index ran 5)))
        (progn
          (alsetq res (index ran 1))
          (if (> (indices res) 1)
            (cat output (format_list_4print res))
            (cat output (cat "" res))
          )
        )
      )
    )
  )
)

(defun bmdfm2bmdfm_offload_ (progn
# .---------------------------------------------------------------------.
# | 0. DRIVING SENDS SHELL COMMANDS TO PIPE BMDFMpipeDriving2Driven<i>  |
# |      "echo args | fastlisp -q exec.flx"                             |
# |      "echo args | BMDFMldr -q exec.flz"                             |
# | 1. SHELL EXECUTES COMMANDS                                          |
# |      "echo args | fastlisp -q exec.flx >BMDFMpipeDriven2Driving<i>" |
# |      "echo args | BMDFMldr -q exec.flz >BMDFMpipeDriven2Driving<i>" |
# | 2. DRIVING RECEIVES RESULTS FROM DRIVEN                             |
# `---------------------------------------------------------------------'
  (setq exec (cat "" $1))  # for "echo args | fastlisp -q exec.flx"
  (setq args (cat "" $2))  # for "echo args | BMDFMldr -q exec.flz"

  (setq exec (if (am_i_in_the_fastlisp_module)
    (cat exec ".flx")
    (cat exec ".flz")
  ))
  (if (== (setq descr (file_open exec)) -1)
    (rise_error_info 1
      (cat "*** Error while opening the `"
      (cat exec "' file!")))
    nil
  )
  (file_close descr)
  (setq exec (if (am_i_in_the_fastlisp_module)
    (cat "fastlisp -q " exec)
    (cat "BMDFMldr -q " exec)
  ))

  (setq Driving2Driven_pipe_name 
    (cat "BMDFMpipeDriving2Driven" (id_cpuproc)))
  (setq Driven2Driving_pipe_name
    (cat "BMDFMpipeDriven2Driving" (id_cpuproc)))

  (if (== (setq Driving2Driven_pipe_descr
     (file_open Driving2Driven_pipe_name)) -1)
    (rise_error_info 1
      (cat "*** Error while opening the `"
      (cat Driving2Driven_pipe_name "' pipe!")))
    nil
  )

  (if (== (setq Driven2Driving_pipe_descr
     (file_open Driven2Driving_pipe_name)) -1)
    (progn
      (file_close Driving2Driven_pipe_descr)
      (rise_error_info 1
        (cat "*** Error while opening the `"
        (cat Driven2Driving_pipe_name "' pipe!")))
    )
    nil
  )

  (file_write Driving2Driven_pipe_descr
    (cat "echo " (cat args
    (cat " | " (cat exec "\n")))))

  (setq result "")
  (while (! (len result))
    (while (== (len (setq str (file_read
       Driven2Driving_pipe_descr 1))) 1)
      (if (== str "\n")
        (break)
        (setq result (cat result str))
      )
    )
  )

  (file_close Driving2Driven_pipe_descr)
  (file_close Driven2Driving_pipe_descr)

  result
))

(defun bmdfm2bmdfm_offload (progn
# .---------------------------------------------------------------------.
# | 0. DRIVING SENDS SHELL COMMANDS TO PIPE BMDFMpipeDriving2Driven<i>  |
# |      "echo args | fastlisp -q exec.flx"                             |
# |      "echo args | BMDFMldr -q exec.flz"                             |
# | 1. SHELL EXECUTES COMMANDS                                          |
# |      "echo args | fastlisp -q exec.flx >BMDFMpipeDriven2Driving<i>" |
# |      "echo args | BMDFMldr -q exec.flz >BMDFMpipeDriven2Driving<i>" |
# | 2. DRIVING RECEIVES RESULTS FROM DRIVEN                             |
# `---------------------------------------------------------------------'
  (setq exec (cat "" $1))  # for "echo args | fastlisp -q exec.flx"
  (setq args (cat "" $2))  # for "echo args | BMDFMldr -q exec.flz"

  (setq flp (cat     " (setq exec (cat \"\" \"" (cat exec "\"))         ")))
  (setq flp (cat flp " (setq args (cat \"\" \""                           ))
  (setq flp (cat flp   (cat args "\"))                                  ")))

  (setq flp (cat flp " (setq exec (if (am_i_in_the_fastlisp_module)      "))
  (setq flp (cat flp "   (cat exec \".flx\")                             "))
  (setq flp (cat flp "   (cat exec \".flz\")                             "))
  (setq flp (cat flp " ))                                                "))
  (setq flp (cat flp " (if (== (setq descr (file_open exec)) -1)         "))
  (setq flp (cat flp "   (rise_error_info 1                              "))
  (setq flp (cat flp "     (cat \"*** Error while opening the `\"        "))
  (setq flp (cat flp "     (cat exec \"' file!\")))                      "))
  (setq flp (cat flp "   nil                                             "))
  (setq flp (cat flp " )                                                 "))
  (setq flp (cat flp " (file_close descr)                                "))
  (setq flp (cat flp " (setq exec (if (am_i_in_the_fastlisp_module)      "))
  (setq flp (cat flp "   (cat \"fastlisp -q \" exec)                     "))
  (setq flp (cat flp "   (cat \"BMDFMldr -q \" exec)                     "))
  (setq flp (cat flp " ))                                                "))

  (setq flp (cat flp " (setq Driving2Driven_pipe_name                    "))
  (setq flp (cat flp "   (cat \"BMDFMpipeDriving2Driven\" (id_cpuproc))) "))
  (setq flp (cat flp " (setq Driven2Driving_pipe_name                    "))
  (setq flp (cat flp "   (cat \"BMDFMpipeDriven2Driving\" (id_cpuproc))) "))

  (setq flp (cat flp " (if (== (setq Driving2Driven_pipe_descr           "))
  (setq flp (cat flp "    (file_open Driving2Driven_pipe_name)) -1)      "))
  (setq flp (cat flp "   (rise_error_info 1                              "))
  (setq flp (cat flp "     (cat \"*** Error while opening the `\"        "))
  (setq flp (cat flp "     (cat Driving2Driven_pipe_name \"' pipe!\")))  "))
  (setq flp (cat flp "   nil                                             "))
  (setq flp (cat flp " )                                                 "))

  (setq flp (cat flp " (if (== (setq Driven2Driving_pipe_descr           "))
  (setq flp (cat flp "    (file_open Driven2Driving_pipe_name)) -1)      "))
  (setq flp (cat flp "   (progn                                          "))
  (setq flp (cat flp "     (file_close Driving2Driven_pipe_descr)        "))
  (setq flp (cat flp "     (rise_error_info 1                            "))
  (setq flp (cat flp "       (cat \"*** Error while opening the `\"      "))
  (setq flp (cat flp "       (cat Driven2Driving_pipe_name \"' pipe!\")))"))
  (setq flp (cat flp "   )                                               "))
  (setq flp (cat flp "   nil                                             "))
  (setq flp (cat flp " )                                                 "))

  (setq flp (cat flp " (file_write Driving2Driven_pipe_descr             "))
  (setq flp (cat flp "   (cat \"echo \" (cat args                        "))
  (setq flp (cat flp "   (cat \" | \" (cat exec \"\\n\")))))             "))

  (setq flp (cat flp " (setq result \"\")                                "))
  (setq flp (cat flp " (while (! (len result))                           "))
  (setq flp (cat flp "   (while (== (len (setq str (file_read            "))
  (setq flp (cat flp "      Driven2Driving_pipe_descr 1))) 1)            "))
  (setq flp (cat flp "     (if (== str \"\\n\")                          "))
  (setq flp (cat flp "       (break)                                     "))
  (setq flp (cat flp "       (setq result (cat result str))              "))
  (setq flp (cat flp "     )                                             "))
  (setq flp (cat flp "   )                                               "))
  (setq flp (cat flp " )                                                 "))

  (setq flp (cat flp " (file_close Driving2Driven_pipe_descr)            "))
  (setq flp (cat flp " (file_close Driven2Driving_pipe_descr)            "))

  (setq flp (cat flp " result                                            "))

  (setq flp (fastlisp flp))
  (if (== (at "[Run-time error " flp) 1)
    (rise_error_info (ival (rightl flp 16)) (rightl flp (+ (at "]: " flp) 2)))
    flp
  )
))

(defun FibonacciSeamless  # to be placed into .cfg
  (progn
    (setq n (+ 0 $1))
    (if (< n 2)
      n
      (+ (FibonacciSeamless (-- n))
         (FibonacciSeamless (- n 2))
      )
    )
  )
)

#                         \\|//                         #
#                         (@ @)                         #
#  .-----------------oOO---(_)---OOo-----------------.  #
#  |                                                 |  #
#  |                  BMDFM PROJECT                  |  #
#  |      Oleksandr Pochayevets (aka Sancho M.)      |  #
#  |                                                 |  #
#  `-------------------------------------------------'  #
#                        |__|__|                        #
#                         || ||                         #
#                        ooO Ooo                        #

# <EOF>

